[
  {
    "objectID": "data/cellranger/cellranger-9.0.1/external/anaconda/lib/python3.10/site-packages/narwhals-1.20.1.dist-info/licenses/LICENSE.html",
    "href": "data/cellranger/cellranger-9.0.1/external/anaconda/lib/python3.10/site-packages/narwhals-1.20.1.dist-info/licenses/LICENSE.html",
    "title": "",
    "section": "",
    "text": "MIT License\nCopyright (c) 2024, Marco Gorelli\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ‚ÄúSoftware‚Äù), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED ‚ÄúAS IS‚Äù, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "geo_single_cell_rna_analysis.html",
    "href": "geo_single_cell_rna_analysis.html",
    "title": "Single-cell RNA-seq Analysis",
    "section": "",
    "text": "I will be using Quarto, a super set of R Markdown for this Single-Cell RNA-seq Analysis. Quarto allows for the creation of detailed scientific reports (along with other formats like interactive web pages, dashboards, etc.) to help encourage collaboration and shareability of bioinformatics workflows.\nAlong with Quarto, I will be using the package manager pixi for further reproducibility, as well as the data workflow software snakemake for handling input/output and making the analysis clear and easy to follow.\nThe following links give instructions for downloading/installing and using these helpful tools.\nQuarto\nPixi\nSnakemake\nOnce these tools are installed, the first step is to initialize a git repository for tracking file changes/updates and create a pixi environment.\n\n\nCode\npixi init sc_rna_seq_analysis --channel conda-forge --channel bioconda\ncd sc_rna_seq_analysis\n\ngit init\n# Create a remote repository through github then add the remote repo\ngit add remote origin https://github.com/elittlestone/SC_RNA_SEQ\ntouch geo_single_cell_rna_analysis.qmd\ngit add geo_single_cell_rna_analysis.qmd\ngit commit -m \"Adding quarto notebook to git repository\"\ngit push origin main\n\n\nAdding necessary packages through pixi can be done as follows:\n\n\nCode\npixi add snakemake sra-tools scanpy anndata cellxgene\n\n\nFor the rest of the analysis, our commands can either be run via pixi by doing: pixi run ‚Äòexecutable‚Äô or by launching a subshell with pixi s and running commands as normal."
  },
  {
    "objectID": "geo_single_cell_rna_analysis.html#environment-setuppackage-installation",
    "href": "geo_single_cell_rna_analysis.html#environment-setuppackage-installation",
    "title": "Single-cell RNA-seq Analysis",
    "section": "",
    "text": "I will be using Quarto, a super set of R Markdown for this Single-Cell RNA-seq Analysis. Quarto allows for the creation of detailed scientific reports (along with other formats like interactive web pages, dashboards, etc.) to help encourage collaboration and shareability of bioinformatics workflows.\nAlong with Quarto, I will be using the package manager pixi for further reproducibility, as well as the data workflow software snakemake for handling input/output and making the analysis clear and easy to follow.\nThe following links give instructions for downloading/installing and using these helpful tools.\nQuarto\nPixi\nSnakemake\nOnce these tools are installed, the first step is to initialize a git repository for tracking file changes/updates and create a pixi environment.\n\n\nCode\npixi init sc_rna_seq_analysis --channel conda-forge --channel bioconda\ncd sc_rna_seq_analysis\n\ngit init\n# Create a remote repository through github then add the remote repo\ngit add remote origin https://github.com/elittlestone/SC_RNA_SEQ\ntouch geo_single_cell_rna_analysis.qmd\ngit add geo_single_cell_rna_analysis.qmd\ngit commit -m \"Adding quarto notebook to git repository\"\ngit push origin main\n\n\nAdding necessary packages through pixi can be done as follows:\n\n\nCode\npixi add snakemake sra-tools scanpy anndata cellxgene\n\n\nFor the rest of the analysis, our commands can either be run via pixi by doing: pixi run ‚Äòexecutable‚Äô or by launching a subshell with pixi s and running commands as normal."
  },
  {
    "objectID": "geo_single_cell_rna_analysis.html#downloading-raw-sequencing-data",
    "href": "geo_single_cell_rna_analysis.html#downloading-raw-sequencing-data",
    "title": "Single-cell RNA-seq Analysis",
    "section": "2 Downloading Raw Sequencing Data",
    "text": "2 Downloading Raw Sequencing Data\nSratools is a suite of command-line tools that allows for the programmatic downloading of GEO data. This avoids having to download through the web and promotes reproducibility as well as error handling. Sratools comes with multiple programs, here we use the fasterq-dump command. Running fasterq-dump -h‚Äô after downloading sratools through pixi gives helpful instructions on how to use the tool as well as the variety of different flags/parameters that can be passed to this program. We use fasterq-dump in a snakemake script to download our rna-seq reads and convert them to fastq format (fasterq-dump handles the download and file format conversion for us).\nI have also created a configuration file where we can store hard-coded values which can then be referenced via our snakefile. This makes the process highly resistant to errors consistent with hard-coding file names. From the email that Dr.¬†Zhang sent me that brings us to a GEO page, I then found the SRR accession ID. Providing this SRR to the fasterq-dump program will then download the appropriate raw sequencing data.\nSratools Fastq-dump\n\n\nCode\nsnakefile=\"download_sra_files.smk\"\ncat $snakefile\n\n\n\n\nCode\nsnakemake -s download_sra_files.smk --cores 8 -p \n\n\nWe can also go to the SRA Web Page for this particular entry and find useful information about the sequencing experiment and runs. Again, we can get this meta data programmatically as well using SRATools\nSequence Read Archive Web Page"
  },
  {
    "objectID": "geo_single_cell_rna_analysis.html#read-alignment-and-transcript-quantification",
    "href": "geo_single_cell_rna_analysis.html#read-alignment-and-transcript-quantification",
    "title": "Single-cell RNA-seq Analysis",
    "section": "3 Read Alignment and Transcript Quantification",
    "text": "3 Read Alignment and Transcript Quantification\nReads 1 and 2 are technical reads, while read 3 contains our actual transcript (Read 1 is the index for demultiplexing, read2 is the Unique Molecular Identifier or UMI + barcode).\n\n3.1 The next step is to download our reference human transcriptome as well as the cellranger softwrae tool from 10x genomics so we can align our raw reads and quantify them.\nDownload CellRanger\nHere is an in-depth explanation of the CellRanger software What is CellRanger?\n\nCell Type Identification: Researchers can classify and identify different cell types based on their unique gene expression profiles. -Cell state analysis: By comparing gene expression patterns, researchers can identify different cellular states, such as quiescent, activated, or differentiated cells.\nBiomarker discovery: Cell Ranger can help identify genes specifically expressed in specific cell types or conditions, which can serve as potential biomarkers.\nDifferential gene expression analysis: Researchers can identify differentially expressed genes between different conditions or cell types, providing insights into molecular differences.\nCell Trajectory Analysis: By analyzing gene expression changes, researchers can infer cell developmental trajectories and transitions.\n\n\n\nCode\nsnakemake -s download_ref_and_run_cellranger.smk --cores 1 -p\n\n\nCellranger is able to map our reads to the transcriptome and perform transcript quantification. The tool outputs an in-depth summary html file with detailed summary statistics."
  },
  {
    "objectID": "geo_single_cell_rna_analysis.html#cell-ranger-summary-al02",
    "href": "geo_single_cell_rna_analysis.html#cell-ranger-summary-al02",
    "title": "Single-cell RNA-seq Analysis",
    "section": "4 üìä Cell Ranger Summary: AL02",
    "text": "4 üìä Cell Ranger Summary: AL02"
  },
  {
    "objectID": "geo_single_cell_rna_analysis.html#cell-ranger-summary-al03",
    "href": "geo_single_cell_rna_analysis.html#cell-ranger-summary-al03",
    "title": "Single-cell RNA-seq Analysis",
    "section": "5 üìä Cell Ranger Summary: AL03",
    "text": "5 üìä Cell Ranger Summary: AL03"
  },
  {
    "objectID": "geo_single_cell_rna_analysis.html#post-processing-with-scanpy",
    "href": "geo_single_cell_rna_analysis.html#post-processing-with-scanpy",
    "title": "Single-cell RNA-seq Analysis",
    "section": "6 Post-processing with Scanpy",
    "text": "6 Post-processing with Scanpy\nScanpy Tutorial\nThe first steps of analyzing our Cell Ranger output involve Quality Control (QC), which includes assessing cells with high mitochondrial gene counts. High mitochondrial RNA fraction often indicates stressed, dying, or damaged cells that were lysed prematurely before droplet encapsulation in the 10x Genomics workflow. These cells are commonly filtered out because their RNA profiles may be compromised and potentially contaminated with RNA from other lysed cells.\n\n\nCode\nsnakemake -s scanpy.smk --cores 1 -p\n\n\n\n\n\n\n\n\n\n\n\n6.1 Doublet Detection\nI filtered the data to only keep cells that have a minimum of 100 genes expressed as well as removed genes which are found in less than 3 cells. Next, we want to perform doublet detection. Doublets are droplets which have two or more cells.\n\n\n6.2 Normalization\nThe next step is to normalize our gene expression values \n\n\n6.3 Feature Selection\nFeature selection involves \n\n\n6.4 Dimensionality Reduction\nDimensionality reduction \n\n\n6.5 Nearest neighbor graph construction/visualization\nNearest-neighbor graphs are \n\n\n6.6 Clustering\nLeiden graph-clustering  ****"
  },
  {
    "objectID": "data/cellranger/cellranger-9.0.1/external/anaconda/lib/python3.10/site-packages/idna-3.10.dist-info/LICENSE.html",
    "href": "data/cellranger/cellranger-9.0.1/external/anaconda/lib/python3.10/site-packages/idna-3.10.dist-info/LICENSE.html",
    "title": "",
    "section": "",
    "text": "BSD 3-Clause License\nCopyright (c) 2013-2024, Kim Davies and contributors. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ‚ÄúAS IS‚Äù AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "data/cellranger/cellranger-9.0.1/external/anaconda/lib/python3.10/site-packages/numpy/random/LICENSE.html",
    "href": "data/cellranger/cellranger-9.0.1/external/anaconda/lib/python3.10/site-packages/numpy/random/LICENSE.html",
    "title": "1 NCSA Open Source License",
    "section": "",
    "text": "This software is dual-licensed under the The University of Illinois/NCSA Open Source License (NCSA) and The 3-Clause BSD License\n\n1 NCSA Open Source License\nCopyright (c) 2019 Kevin Sheppard. All rights reserved.\nDeveloped by: Kevin Sheppard (kevin.sheppard@economics.ox.ac.uk, kevin.k.sheppard@gmail.com) http://www.kevinsheppard.com\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ‚ÄúSoftware‚Äù), to deal with the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimers.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimers in the documentation and/or other materials provided with the distribution.\nNeither the names of Kevin Sheppard, nor the names of any contributors may be used to endorse or promote products derived from this Software without specific prior written permission.\nTHE SOFTWARE IS PROVIDED ‚ÄúAS IS‚Äù, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.\n\n\n2 3-Clause BSD License\nCopyright (c) 2019 Kevin Sheppard. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ‚ÄúAS IS‚Äù AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n3 Components\nMany parts of this module have been derived from original sources, often the algorithm‚Äôs designer. Component licenses are located with the component code."
  }
]